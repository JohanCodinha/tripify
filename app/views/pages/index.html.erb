<script>
  var mapAccessKey = "<%= ENV['MAP_ACCESS_KEY'] %>";
  // export MAP_ACCESS_KEY= in bash session & will need to enter into Heroku when deployed
</script>
<script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<div id="tripform">
<input id="placefinder"/><input type="text" id="datepicker" placeholder="Date" />
<button id ="addplace">+</button>
</div>

<div id="map">

</div>

<div id="chart">

</div>

<script>
// Map display
$(document).ready(function() {
  L.mapbox.accessToken = mapAccessKey;
// Create a map in the div #map
  L.mapbox.map('map', 'mapbox.streets').setView([0, 0], 2);
});

var geojson = {
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "geometry": {
        "type": "Point",
        "coordinates": [
          -77.0366048812866,
          38.89784666877921
        ]
      },
      "properties": {}
    }
  ]
}

//date picker widget
 $(function() {
    $("#datepicker").datepicker({
    dateFormat: "dd-mm-yy",
    changeMonth: true,
    changeYear: true
    })
  });

//autocomplete place names
  var options = {
    url: function(input) {
        return "https://api.mapbox.com/geocoding/v5/mapbox.places/" + input +
        ".json?types=place%2Ccountry%2Cregion&access_token=" + mapAccessKey;
    },

    getValue: "place_name",

    ajaxSettings: {
        dataType: "json"
    },

    listLocation: "features",

    requestDelay: 300,

    theme: "round",

    placeholder: "Enter a place",

    list: {

    onChooseEvent: function() {
      var coords = $('#placefinder').getSelectedItemData().center;
      var placeName = $('#placefinder').getSelectedItemData().place_name;
      var myLayer = L.mapbox.featureLayer().addTo(map);
      myLayer.setGeoJSON(geojson);

    }
  }
};

$("#placefinder").easyAutocomplete(options);

$('#addplace').on('click', function(event) {
  var $newPlace = $('<p>').text($('#placefinder').val());
  var $newDate = $('<span>').text(' ' + $('#datepicker').val());
  $newPlace.append($newDate);
  $('#tripform').append($newPlace);
  var obj = {};
  obj['date'] = $('#datepicker').val();
  obj['country']= $('#placefinder').val();
  myPlaces.push(obj);
  make_pie_chart();
});

var myPlaces =[];

function make_pie_chart() {
  // clears chart every time a new city is added
  $('#chart').empty();
  var newarray =[];
  for(var i=0;i<myPlaces.length;i++) {
    var oneDay = 24*60*60*1000;
    // creates date object
    firstDate = myPlaces[i].date.split("-").reverse().join("-");
    firstDateObj = new Date(firstDate);
    var object = {};
    if (myPlaces[i+1] == undefined) {
      var today = new Date();
      var secondDate = today.getDate() + (today.getMonth()+1) + today.getFullYear();
      var secondDateObj = new Date(secondDate);
      var diffDays = Math.round(Math.abs((secondDateObj.getTime() - firstDateObj.getTime())/(oneDay)));
      object['country'] = myPlaces[i].country;
      object['count'] = diffDays;
      newarray.push(object);
    }
    else {
      var secondDate = myPlaces[i+1].date.split("-").reverse().join("-");
      var secondDateObj = new Date(secondDate);
      // calculate no. of days
      var diffDays = Math.round(Math.abs((secondDateObj.getTime() - firstDateObj.getTime())/(oneDay)));
      object['country'] = myPlaces[i].country;
      object['count'] = diffDays;
      newarray.push(object);
    }
    console.log(newarray);
  }
    var width = 360;
    var height = 360;
    var radius = Math.min(width, height) / 2;
    var color = d3.scale.ordinal().range(['#A60F2B', '#648C85', '#B3F2C9', '#528C18', '#C3F25C']);
    var svg = d3.select('#chart')
                .append('svg')
                .attr('width', width)
                .attr('height', height)
                .append('g')
                .attr('transform', 'translate(' + (width / 2) +  ',' + (height / 2) + ')');
    var arc = d3.svg.arc().outerRadius(radius);
    var pie = d3.layout.pie().value(function(d) { return d.count; });
    var path = svg.selectAll('path')
                  .data(pie(newarray))
                  .enter()
                  .append('path')
                  .attr('d', arc)
                  .attr('fill', function(d, i) {
                    return color(d.data.country);
                  });
}

</script>
